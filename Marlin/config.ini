#
# Marlin Firmware
# config.ini - Options to apply before the build
#
[config:base]
#
# ini_use_config - A comma-separated list of actions to apply to the Configuration files.
#                  The actions will be applied in the listed order.
#  - none
#    Ignore this file and don't apply any configuration options
#
#  - base
#    Just apply the options in config:base to the configuration
#
#  - minimal
#    Just apply the options in config:minimal to the configuration
#
#  - all
#    Apply all 'config:*' sections in this file to the configuration
#
#  - another.ini
#    Load another INI file with a path relative to this config.ini file (i.e., within Marlin/)
#
#  - https://me.myserver.com/path/to/configs
#    Fetch configurations from any URL.
#
#  - example/Creality/Ender-5 Plus @ bugfix-2.1.x
#    Fetch example configuration files from the MarlinFirmware/Configurations repository
#    https://raw.githubusercontent.com/MarlinFirmware/Configurations/bugfix-2.1.x/config/examples/Creality/Ender-5%20Plus/
#
#  - example/default @ release-2.0.9.7
#    Fetch default configuration files from the MarlinFirmware/Configurations repository
#    https://raw.githubusercontent.com/MarlinFirmware/Configurations/release-2.0.9.7/config/default/
#
#  - [disable]
#    Comment out all #defines in both Configuration.h and Configuration_adv.h. This is useful
#    to start with a clean slate before applying any config: options, so only the options explicitly
#    set in config.ini will be enabled in the configuration.
#
#  - [flatten] (Not yet implemented)
#    Produce a flattened set of Configuration.h and Configuration_adv.h files with only the enabled
#    #defines and no comments. A clean look, but context-free.
#
ini_use_config                        = minimal, basic, advanced, micro_probe

# Load all config: sections in this file
;ini_use_config                       = all
# Disable everything and apply subsequent config:base options
;ini_use_config                       = [disable], base
# Load config file relative to Marlin/
;ini_use_config                       = another.ini
# Download configurations from GitHub
;ini_use_config                       = example/Creality/Ender-5 Plus @ bugfix-2.1.x
# Download configurations from your server
;ini_use_config                       = https://me.myserver.com/path/to/configs
# Evaluate config:base and do a config dump
;ini_use_config                       = base
;config_export                        = 2

[config:minimal]
string_config_h_author                = "(Will, Custom Ender3 w/ SKR mini v3)"
motherboard                           = BOARD_BTT_SKR_MINI_E3_V3_0
serial_port                           = 2
baudrate                              = 115200

x_driver_type                         = TMC2209
y_driver_type                         = TMC2209
z_driver_type                         = TMC2209
e0_driver_type                        = TMC2209

pidtempbed                            = on

default_axis_steps_per_unit           = { 80, 80, 400, 93 }

invert_x_dir                          = true
invert_y_dir                          = true
invert_z_dir                          = false

x_bed_size                            = 235
y_bed_size                            = 235
z_max_pos                             = 250

cr10_stockdisplay                     = on

[config:basic]
s_curve_acceleration                  = on
eeprom_settings                       = on
eeprom_init_now                       = off
nozzle_park_feature                   = on
sdsupport                             = on
individual_axis_homing_menu           = off
individual_axis_homing_submenu        = on
custom_machine_name                   = "Will's Ender3"

[config:advanced]
use_controller_fan                    = on
controller_fan_pin                    = FAN2_PIN
controller_fan_editable               = on
e0_auto_fan_pin                       = FAN1_PIN

long_filename_host_support            = on
long_filename_write_support           = on

advanced_pause_feature                = on
park_head_on_pause                    = on

chopper_timing                        = CHOPPER_DEFAULT_24V

monitor_driver_status                 = on

tmc_debug                             = on

hybrid_threshold                      = on

[config:bed_level]
; Main options
mesh_bed_leveling                     = on
lcd_bed_leveling                      = on
lcd_bed_tramming                      = on

; Disable probe options
biqu_microprobe_v2                    = off
probe_enable_disable                  = off
endstoppullup_zmin_probe              = off
auto_bed_leveling_linear              = off
probe_offset_wizard                   = off
babystepping                          = off
g29_retry_and_recover                 = off

[config:micro_probe]
; Main options
biqu_microprobe_v2                    = on
nozzle_to_probe_offset                = { -41, -16, 0 }
z_min_probe_pin                       = PC14
z_min_probe_endstop_hit_state         = LOW
z_min_probe_uses_z_min_endstop_pin    = off
probe_enable_disable                  = on
probe_enable_pin                      = PA_1
endstoppullup_zmin_probe              = on

; Bed Leveling
auto_bed_leveling_linear              = on
mesh_bed_leveling                     = off
restore_leveling_after_g28            = on
lcd_bed_leveling                      = on
lcd_bed_tramming                      = on
bed_tramming_use_probe                = off

; Advanced options
probe_offset_wizard                   = on
probe_offset_wizard_start_z           = -4.0
babystepping                          = on
babystep_always_available             = on
babystep_zprobe_offset                = on
babystep_gfx_overlay                  = on
g29_retry_and_recover                 = on
g29_max_retries                       = 4